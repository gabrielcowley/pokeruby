mapscripts PetalburgCity_PokemonCenter_1F_MapScripts {
	MAP_SCRIPT_ON_TRANSITION: PetalburgCity_PokemonCenter_1F_MapScript1
}

script PetalburgCity_PokemonCenter_1F_MapScript1 {
	setrespawn(HEAL_LOCATION_PETALBURG_CITY)
	call(Common_EventScript_UpdateBrineyLocation)
}

script PetalburgCity_PokemonCenter_1F_EventScript_PkmnCenterNurse {
	setvar(VAR_0x800B, 1)
	call(Common_EventScript_PkmnCenterNurse)
	waitmessage
	waitbuttonpress
	release
}

script PetalburgCity_PokemonCenter_1F_EventScript_FatMan {
	msgbox(PetalburgCity_PokemonCenter_1F_Text_17BD30, MSGBOX_NPC)
}

script PetalburgCity_PokemonCenter_1F_EventScript_Youngster {
	msgbox(PetalburgCity_PokemonCenter_1F_Text_17BD92, MSGBOX_NPC)
}

script PetalburgCity_PokemonCenter_1F_EventScript_Woman {
	lock
	faceplayer
	if (var(VAR_KANTO_STARTERS_STATE) > 0) {
		call(AfterBattle)
		release
		end
	}
	msgbox(Text_BeforeBattle)
	bufferstring(0, Text_BeforeBattle_BattleChoice)
	call(OfferChoice)
	trainerbattle_no_intro(TRAINER_BIANCA, Text_WonBattle)
	msgbox(Text_AfterBattle_Preamble)
	setvar(VAR_KANTO_STARTERS_STATE, 1)
	call(AfterBattle)
	release
}

script(local) AfterBattle {
	if (var(VAR_KANTO_STARTERS_STATE) == 1) {
		setvar(VAR_TEMP_0, SPECIES_BULBASAUR)
		call(TryGiveMon)
	}
	if (var(VAR_KANTO_STARTERS_STATE) == 2) {
		setvar(VAR_TEMP_0, SPECIES_CHARMANDER)
		call(TryGiveMon)
	}
	if (var(VAR_KANTO_STARTERS_STATE) == 3) {
		setvar(VAR_TEMP_0, SPECIES_SQUIRTLE)
		call(TryGiveMon)
	}
	if (var(VAR_KANTO_STARTERS_STATE) == 4) {
		msgbox(Text_AfterBattle_AllPokemonReceived)
	}
}

script(local) TryGiveMon {
	call(CheckPartySize)
	bufferspeciesname(1, VAR_TEMP_0)
	bufferstring(0, Text_AfterBattle_ReceivePokemonChoice)
	call(OfferChoice)
	playfanfare(MUS_OBTAIN_ITEM)
	message(Text_AfterBattle_ReceivedPokemon)
	waitfanfare
	waitmessage
	givemon(VAR_TEMP_0, 5, ITEM_NONE)
	call(OfferToNicknamePokemon)
	addvar(VAR_KANTO_STARTERS_STATE, 1)
}

script(local) OfferChoice {
	msgbox(gStringVar1, MSGBOX_YESNO)
	if (var(VAR_RESULT) == 0) {
		msgbox(Text_AfterBattle_DeclinedBattleOrPokemon)
		release
		end
	}
}

script(local) CheckPartySize {
	getpartysize
	if (var(VAR_RESULT) == 6) {
		msgbox(Text_AfterBattle_NotEnoughSpace)
		release
		end
	}
	copyvar(0x8004, VAR_RESULT)
}

script(local) OfferToNicknamePokemon {
	msgbox(PetalburgCity_PokemonCenter_1F_Text_Woman_AfterBattle_GivePokemonNickname, MSGBOX_YESNO)
	if (var(VAR_RESULT) == 1) {
		call(Common_EventScript_NameReceivedPartyMon)
		lock
	}
}

text(local) Text_BeforeBattle {
	format("I just got back from the Kanto region.\p"
	       "I acquired some rare POKéMON while I was there.\p"
		   "You look like you'd be interested to see them.")
}

text(local) Text_BeforeBattle_BattleChoice {
	format("Care for a battle?")
}

text(local) Text_WonBattle {
	format("Impressive.")
}

text(local) Text_AfterBattle_Preamble {
	format("Very well done!\p"
	       "I've been looking for a trainer who can look after these POKéMON and you seem up to the responsibility.")
}

text(local) Text_AfterBattle_NotEnoughSpace {
	format("Oh, it seems you don't have space in your party.\p"
	       "Feel free to come back when you have space for this POKéMON.")
}

text(local) Text_AfterBattle_DeclinedBattleOrPokemon {
	format("Okay, feel free to come back if you change your mind.")
}

text(local) Text_AfterBattle_ReceivePokemonChoice {
	format("Would you like to take {STR_VAR_2}?")
}

text(local) Text_AfterBattle_ReceivedPokemon {
	format("{PLAYER} received {STR_VAR_2}.")
}

text(local) Text_AfterBattle_AllPokemonReceived {
	format("Take good care of those POKéMON.")
}
